map "http://fhir.ch/ig/cda-fhir-maps/StructureMap/BundleToCda" = "BundleToCda"

uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias Bundle as source
uses "http://hl7.org/fhir/StructureDefinition/dateTime" alias dateTime as source
uses "http://hl7.org/fhir/StructureDefinition/date" alias date as source
uses "http://hl7.org/fhir/StructureDefinition/instant" alias instant as source

uses "http://hl7.org/cda/stds/core/StructureDefinition/ClinicalDocument" alias ClinicalDocument as target
uses "http://hl7.org/cda/stds/core/StructureDefinition/TS" alias TS as target

group BundleToClinicalDocument(source bundle : Bundle, target cda : ClinicalDocument) {
    bundle -> cda.typeId as typeId then {
      bundle -> typeId.root = '2.16.840.1.113883.1.3' "root";
      bundle -> typeId.extension = 'POCD_MT000040UV02' "extension";
    } "typeId";
    bundle.identifier as identifier -> cda.id as id then IdentifierII(identifier, id) "id";
    bundle.timestamp as timestamp -> cda.effectiveTime as effectiveTime then InstantTS(timestamp, effectiveTime) "effectiveTime";
}

group InstantTS(source src : instant, target tgt : TS) {
    src.value as v -> tgt.value = v "copy";
}
  
group DateTimeTS(source src : dateTime, target tgt : TS) extends InstantTS <<types>> {
}
  
group DateTS(source src : date, target tgt : TS) extends InstantTS <<types>> {
}

group IdentifierII(source src : Identifier, target tgt : II)  {
    src.value as value where src.system.empty() and src.value.startsWith('urn:uuid:') -> tgt.root = (value.substring(9).upper()) "idAsUuid";
    src.value as value where src.system = 'urn:ietf:rfc:3986' -> tgt.root = (value.substring(9).upper()) "idAsUuid";
    src.value as value where src.system.startsWith('urn:oid:') then {
      src.system as system -> tgt.root = (system.substring(8)), tgt.extension = value "oidident"; 
    } "system";
}
  
